name: Build and deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AZURE_WEBAPP_NAME: aspnetcore-angular-ssr # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '10.x' # set this to the node version to use
  DOTNET_VERSION: '5.0.x'
  WEB_API_PROJECT: './WebAPI/WebAPI.csproj'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Restore dependencies
        run: dotnet restore ${{ env.WEB_API_PROJECT }}
      - name: Build Web API
        run: dotnet build ${{ env.WEB_API_PROJECT }} --no-restore -c Release
      - name: Publish Web API
        run: dotnet publish ${{ env.WEB_API_PROJECT }} --no-build --verbosity normal -c Release -o "./dist/webapi"
      # - name: Restore npm packages
      #   run: npm install
      #   working-directory: ./ng-client
      # - name: Build Angular App
      #   run: npm run build:ssr
      #   working-directory: ./ng-client
      # - name: Copy files
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          # A file, directory or wildcard pattern that describes what to upload
          path: './dist'
          if-no-files-found: error

  # This workflow will build and push a node.js application to an Azure Web App when a release is created.
  #
  # This workflow assumes you have already created the target Azure App Service web app.
  # For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
  #
  # To configure this workflow:
  #
  # 1. For Linux apps, add an app setting called WEBSITE_WEBDEPLOY_USE_SCM and set it to true in your app **before downloading the file**.
  #      For more instructions see: https://docs.microsoft.com/azure/app-service/configure-common#configure-app-settings
  #
  # 2. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
  #    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
  #
  # 3. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
  #
  # For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
  # For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples

  # build-and-deploy:
  #   name: Build and Deploy
  #   runs-on: ubuntu-latest
  #   environment: production
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Node.js ${{ env.NODE_VERSION }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #     - name: npm install, build, and test
  #       run: |
  #         # Build and test the project, then
  #         # deploy to Azure Web App.
  #         npm install
  #         npm run build --if-present
  #         npm run test --if-present
  #     - name: 'Deploy to Azure WebApp'
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
